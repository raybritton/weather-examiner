# Thanks to https://github.com/matchai/test-rust-actions

name: Main

on: [push, pull_request]

jobs:
  build_and_release:
    if: startsWith(github.ref, 'refs/tags/v')
    name: Build and Release
    strategy:
      fail-fast: false
      matrix:
        target:
          - x86_64-apple-darwin
          - x86_64-pc-windows-msvc
          - x86_64-unknown-linux-gnu
        include:
          - target: x86_64-unknown-linux-gnu
            os: ubuntu-latest
            name: weather-x86_64-unknown-linux-gnu.tar.gz
          - target: x86_64-apple-darwin
            os: macOS-latest
            name: weather-x86_64-apple-darwin.tar.gz
          - target: x86_64-pc-windows-msvc
            os: windows-latest
            name: weather-x86_64-pc-windows-msvc.zip
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v2

      - name: Install linux dependencies
        if: matrix.os == 'ubuntu-latest'
        run: |
          sudo apt-get install libssl-dev pkg-config build-essential

      - uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          target: ${{ matrix.target }}
          override: true

      - uses: actions-rs/cargo@v1
        with:
          use-cross: true
          command: build
          args: --release --target=${{ matrix.target }}

      - name: Prepare build artifacts [Windows]
        if: matrix.os == 'windows-latest'
        run: |
          cd target/${{ matrix.target }}/release
          strip weather.exe
          7z a ../../../${{ matrix.name }} weather.exe
          cd -

      - name: Prepare build artifacts [-nix]
        if: matrix.os != 'windows-latest'
        run: |
          cd target/${{ matrix.target }}/release
          strip weather
          tar czvf ../../../${{ matrix.name }} weather
          cd -

      - uses: softprops/action-gh-release@v1
        with:
          files: ${{ matrix.name }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
